name: Release Workflow

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  upload-to-test-pypi:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
    - name: Upload to Test PyPi
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*

  test-on-test-pypi:
    needs: upload-to-test-pypi
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package from Test PyPi
        run: |
          python -m pip install --upgrade pip
          if [[ "${{ matrix.python-version }}" < "3.12" ]]; then
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple duet-tools[landfire]
          else
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple duet-tools
          fi
      - name: Install test dependencies
        run: |
          if [[ "${{ matrix.python-version }}" < "3.12" ]]; then
            pip install -r requirements/test_requirements_landfire.txt
          else
            pip install -r requirements/test_requirements.txt
          fi
      - name: Run pytest
        env:
          TEST_ENV: test_pypi
        run: |
          if [[ "${{ matrix.python-version }}" < "3.12" ]]; then
            pytest
          else
            pytest --ignore=tests/test_landfire_module.py

  upload-to-pypi:
    needs: test-on-test-pypi
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

  test-on-pypi:
    needs: upload-to-pypi
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package from PyPi
        run: |
          python -m pip install --upgrade pip
          if [[ "${{ matrix.python-version }}" < "3.12" ]]; then
            pip install duet-tools[landfire]
          else
            pip install duet-tools
          fi
      - name: Install test dependencies
        run: |
          if [[ "${{ matrix.python-version }}" < "3.12" ]]; then
            pip install -r requirements/test_requirements_landfire.txt
          else
            pip install -r requirements/test_requirements.txt
          fi
      - name: Run pytest
        env:
          TEST_ENV: pypi
        run: |
          if [[ "${{ matrix.python-version }}" < "3.12" ]]; then
            pytest
          else
            pytest --ignore=tests/test_landfire_module.py
